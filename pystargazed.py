import itertools
import sys
from string import Template

import requests as req
from mdutils.mdutils import MdUtils

user_url = Template("https://api.github.com/users/$username")
starred_url = Template("https://api.github.com/users/$username/starred?per_page=100&page=$page")
total_shield = Template("![Total](https://img.shields.io/badge/Total-$total-green.svg)")

readme_file = MdUtils(title='Stargazed', file_name='README')

def fetch_starred_repos(username): 
	responses = list()
	for page in itertools.count(1):
		response = req.get(starred_url.substitute(username=username, page=page)).json()
		if not response:
			break 
		responses += response
	return responses

def group_based_on_language(repos):
	group = dict()
	for repo in repos:
		language = repo.get('language') or 'Other'
		if not group.get(language):
			group[language] = list()
		group[language].append(
			{
				'name': repo.get('name'),
				'url': repo.get('html_url'),
				'description': repo.get('description') or '',
				'author': repo.get('owner').get('login')
			}
		)
	return group
		  
def run(username):
	response = req.get(user_url.substitute(username=username))
	userexists = not response.json().get("message") == "Not Found"
	if not userexists:
		raise Exception('user not found')
	starred_repos = fetch_starred_repos(username)
	total_starred_repos = len(starred_repos)
	grouped_by_language = dict(
		sorted(
			group_based_on_language(starred_repos).items()
		)
	)

	readme_file.new_line('> Curated list of my starred github repositories. Generated by [pystargazed](https://github.com/neelabalan/pystargazed)')
	readme_file.new_line()
	readme_file.new_line(total_shield.substitute(total=total_starred_repos))
	readme_file.new_line()
	toc_marker = readme_file.create_marker('TOC')

	for language, repos in grouped_by_language.items():
		readme_file.new_header(level=	1, title=language)
		value_matrix = ["Repository", "Description", "Author"]
		total_repo = len(repos)
		for repo in repos:
			value_matrix.extend(
				[
					"[{}]({})".format(repo["name"], repo["url"]),
					repo["description"],
					repo["author"],
				]
			)
		readme_file.new_table(columns=3, rows=total_repo+1, text=value_matrix, text_align='left')

	readme_file.new_table_of_contents(table_title='Contents', marker=toc_marker)
	readme_file.create_md_file()

if __name__ == "__main__":
	args = sys.argv
	username = args[1] if len(args) > 0 else None
	if not username:
		sys.exit('no user provided')
	run(username)